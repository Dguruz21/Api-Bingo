service: ${self:custom.projectName.value}-${self:provider.stage}

provider:
  name: aws
  runtime: nodejs18.x
  region: ${self:custom.regionFullname.${self:provider.stage}}
  stage: ${opt:stage,'desa'}
  timeout: 120
  memorySize: 512
  versionFunctions: false
  tracing: true
  iam:
    role: arn:aws:iam::744209629115:role/${self:custom.lambdaType.value}-lambda-access-${self:provider.stage}-role
  deploymentBucket:
    name: bingo-${self:provider.stage}-lambda
    serverSideEncryption: AES256
  stackTags:
    NAME: ${self:custom.projectName.value}-${self:provider.stage}
    STAGE: ${self:provider.stage}
  environment:
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
  configValidationMode: error

custom:
  lambdaType:
    value: developer
  projectName:
    value: bingo

  regionFullname:
    desa: us-east-1
    prod: us-east-1

package:
  individually: true
  patterns:
    - "!./**"
    - "dist/**"
    - "!dist/src/lambdas"
    - "node_modules/**"

functions:
  # tokenAuthorizer:
  #   handler: dist/src/lambdas/tokenAuthorizer.handler

  createBingoGame:
    handler: dist/src/lambdas/createBingoGame.handler
    package:
      individually: true
      patterns:
        - 'dist/src/lambdas/createBingoGame.js'
    environment:
      BINGO_GAME_TABLE: ${ssm:/bingo-game-table-${self:provider.stage}}
    events:
      - http:
          path: /create
          method: post

  createBingoCard:
    handler: dist/src/lambdas/createBingoCard.handler
    package:
      individually: true
      patterns:
        - 'dist/src/lambdas/createBingoCard.js'
    environment:
      BINGO_CARD_TABLE: ${ssm:/bingo-card-table-${self:provider.stage}}
      SQS_URL: ${ssm:/email-notification-${self:provider.stage}}
    events:
      - http:
          path: /card
          method: post

  callBingoNumbers:
    handler: dist/src/lambdas/callBingoNumbers.handler
    package:
      individually: true
      patterns:
        - 'dist/src/lambdas/callBingoNumbers.js'
    environment:
      BINGO_CARD_TABLE: ${ssm:/bingo-card-table-${self:provider.stage}}
      BINGO_GAME_TABLE: ${ssm:/bingo-game-table-${self:provider.stage}}
    events:
      - http:
          path: /call/{game_id}
          method: get

  checkBingoWinner:
    handler: dist/src/lambdas/checkBingoWinner.handler
    package:
      individually: true
      patterns:
        - 'dist/src/lambdas/checkBingoWinner.js'
    environment:
      BINGO_CARD_TABLE: ${ssm:/bingo-card-table-${self:provider.stage}}
      BINGO_GAME_TABLE: ${ssm:/bingo-game-table-${self:provider.stage}}
    events:
      - http:
          path: /check
          method: post

  emailNotification:
    handler: dist/src/lambdas/emailNotification.handler
    package:
      individually: true
      patterns:
        - 'dist/src/lambdas/emailNotification.js'

